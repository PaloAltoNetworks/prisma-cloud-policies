{
  "policyUpi": "PC-AWS-IAM-1123",
  "policyId": "487d78f9-875c-44e7-ba4a-d1b945f404b4",
  "policyType": "config",
  "cloudType": "aws",
  "severity": "high",
  "name": "AWS Cognito service role with wide privileges does not validate authentication",
  "description": "Unvalidated authentication in an AWS Cognito service role with excessive privileges allows unauthorized access to AWS resources.\n\nAWS Cognito manages user identities for applications. A Cognito service role defines permissions for services accessing resources; the 'amr' field indicates authentication method. If 'amr' lacks authentication validation, an unauthenticated user with a valid token can assume the role. A role with excessive privileges ('*' wildcard in action and resource) enables lateral movement and widespread unauthorized access.\n\nImpact includes data breaches, account compromise, and service disruption. Restricting Cognito service role privileges according to least privilege principles mitigates this risk, preventing unauthorized access and improving security posture.\n\nImplement least privilege: Restrict Cognito service roles to only necessary actions and resources. Avoid using '*' wildcards. Regularly review and update permissions to ensure they remain appropriate. For guest access, assign a dedicated role with minimal privileges.",
  "rule.criteria": "d26533cf-1078-48f4-9524-86e0c8555e3d",
  "searchModel.query": "config from cloud.resource where api.name = 'aws-iam-list-roles' AND json.rule = role.assumeRolePolicyDocument.Statement[*].Action contains \"sts:AssumeRoleWithWebIdentity\" and role.assumeRolePolicyDocument.Statement[*].Principal.Federated contains \"cognito-identity.amazonaws.com\" and role.assumeRolePolicyDocument.Statement[*].Effect contains \"Allow\" and role.assumeRolePolicyDocument.Statement[*].Condition contains \"cognito-identity.amazonaws.com:amr\" and role.assumeRolePolicyDocument.Statement[*].Condition contains \"unauthenticated\" as X; config from cloud.resource where api.name = 'aws-iam-get-policy-version' AND json.rule = document.Statement[?any(Effect equals Allow and Action contains :* and Resource equals * )] exists as Y; filter \"($.X.inlinePolicies[*].policyDocument.Statement[?(@.Effect=='Allow' && @.Resource=='*')].Action contains :* ) or ($.X.attachedPolicies[*].policyArn intersects $.Y.policyArn)\"; show X;",
  "recommendation": "To remove the policy which have excessive permission from the guess access role,\n1. Log in to the AWS console.\n2. Navigate to the IAM service.\n3. Click on Roles.\n4. Click on the reported IAM role.\n5. Under 'Permissions policies' section, remove the policy having excessive permissions and assign a limited permission policy as required for a particular role.",
  "remediable": false,
  "remediation.cliScriptTemplate": "",
  "remediation.description": "",
  "remediation.impact": "",
  "compliance.standard": [
    "ACSC Information Security Manual (ISM) (Latest)",
    "CIS Controls v8.1",
    "CSA CCM v4.0.12",
    "Cloud Security Assurance Program (CSAP) - IaaS",
    "Cloud Security Assurance Program (CSAP) - Low",
    "Cloud Security Assurance Program (CSAP) - SaaS Standard",
    "HIPAA",
    "ISO/IEC 27001:2022",
    "ITSG-33",
    "Insurance Regulatory And Development Authority Of India",
    "MITRE ATT&CK v15.1 Cloud IaaS for Enterprise",
    "Microsoft Cloud Security Benchmark v1",
    "NCSC Cloud Security Principles",
    "NIST 800-53 Rev 5",
    "NYDFS 23 CRR-NY 500.0",
    "PCI DSS v4.0.1",
    "SOC 2",
    "Secure Controls Framework (SCF) - 2024.2",
    "TX-RAMP Level 2",
    "Trusted Information Security Assessment Exchange (TISAX)"
  ]
}