{
  "policyUpi": "PC-AWS-RDS-1177",
  "policyId": "9090e54c-abec-4aed-95a6-4971a35b98dc",
  "policyType": "config",
  "cloudType": "aws",
  "severity": "informational",
  "name": "AWS Aurora MySQL DB cluster does not publish audit logs to CloudWatch Logs",
  "description": "This policy identifies AWS Aurora MySQL DB cluster where audit logging is disabled or audit logs are not published to Amazon CloudWatch Logs.\n\nAurora MySQL DB cluster integrates with Amazon CloudWatch for performance metric gathering and analysis, supporting CloudWatch Alarms. While the Aurora MySQL DB cluster provides customizable audit logs for monitoring database operations, these logs are not automatically sent to CloudWatch Logs, limiting centralized monitoring and analysis of database activities.\n\nIt is recommended to configure the Aurora MySQL DB cluster to enable audit logs and publish audit logs to CloudWatch",
  "rule.criteria": "58a5e0a9-4bca-4b5f-93e3-feafe0522946",
  "searchModel.query": "config from cloud.resource where api.name = 'aws-rds-db-cluster' AND json.rule = engine equals \"aurora-mysql\" and status equals \"available\" as X; config from cloud.resource where api.name = 'aws-rds-db-cluster-parameter-group' AND json.rule = DBParameterGroupFamily contains \"aurora-mysql\" as Y; filter '$.X.dBclusterParameterGroupArn equals $.Y.DBClusterParameterGroupArn and (($.Y.parameters.server_audit_logging.ParameterValue does not exist or $.Y.parameters.server_audit_logging.ParameterValue equals 0) or ($.X.enabledCloudwatchLogsExports does not contain \"audit\" and $.Y.parameters.server_audit_logs_upload.ParameterValue equals 0))' ; show X;",
  "recommendation": "To create a custom parameter group if the cluster has only the default parameter group use the following steps: \n\n1. Sign in to the AWS Management Console\n2. Select the specific region from the region drop-down in the top right corner, for which the alert is generated\n3. In the Navigation Panel on the left, Select 'All services' and under 'Database', select 'RDS'\n4. In the navigation pane, choose 'Parameter groups'\n5. Choose 'Create parameter group'\n6. The Create parameter group window appears\n\n  6a. In the 'Parameter group name' box, enter the name of the new DB cluster parameter group.\n  6b. In the 'Description' box, enter a description for the new DB cluster parameter group.\n  6c. In the 'Engine type' drop-down, select the engine type (Aurora MySQL)\n  6d. In the 'Parameter group family' list, select a DB parameter group family\n  6e. In the Type list, select 'DB cluster Parameter Group'.\n\n7. Choose 'Create'\n\nTo modify the custom DB cluster parameter group to enable audit logging, follow the below steps: \n\n1. Sign in to the AWS Management Console\n2. Select the specific region from the region drop-down in the top right corner, for which the alert is generated\n3. In the Navigation Panel on the left, Select 'All services' and under 'Database', select 'RDS'\n4. In the navigation pane, choose 'Parameter groups'\n5. In the list, choose the above-created parameter group or the reported resource custom parameter group that you want to modify.\n6. Choose 'Actions', and then choose 'Edit' to modify your Parameter group.  \n7. Change the value of the 'server_audit_logging' parameter to '1' in the value drop-down and click 'Save Changes' for enabling audit logs.\n\nTo modify an AWS Aurora MySQL DB Cluster to use the custom parameter group, follow the below steps: \n\n1. Sign in to the AWS Management Console\n2. Select the specific region from the region drop-down in the top right corner, for which the alert is generated\n3. In the Navigation Panel on the left, Select 'All services' and under 'Database', select 'RDS'\n4. In the navigation pane, choose 'Databases'\n5. Choose the reported cluster that you want to associate your parameter group with. Choose 'Modify' to modify your cluster \n6. Under 'Additional configuration', select the above-created cluster parameter group from the 'DB cluster parameter group' dropdown\n7. Choose 'Continue' and check the summary of modifications\n8. Under the 'Schedule modifications' section, select 'Apply during the next scheduled maintenance window' or 'Apply immediately' based on your requirements for when to apply modifications\n9. Choose 'Modify cluster' to save your changes\n\nTo modify an AWS Aurora MySQL DB Cluster for enabling export logs to cloudwatch, follow the below steps: \n\n1. Sign in to the AWS Management Console\n2. Select the specific region from the region drop-down in the top right corner, for which the alert is generated\n3. In the Navigation Panel on the left, Select 'All services' and under 'Database', select 'RDS'\n4. In the navigation pane, choose 'Databases'\n5. Choose the reported cluster that you want to associate your parameter group with. Choose 'Modify' to modify your cluster\n6. In the 'Log exports' section, choose the 'Audit log' to start publishing to CloudWatch Logs\n7. Choose 'Continue' and check the summary of modifications\n8. Under the 'Schedule modifications' section, select 'Apply during the next scheduled maintenance window' or 'Apply immediately' based on your requirements for when to apply modifications\n9. Choose 'Modify cluster' to save your changes",
  "remediable": false,
  "remediation.cliScriptTemplate": "",
  "remediation.description": "",
  "remediation.impact": "",
  "compliance.standard": [
    "CIS Controls v8.1",
    "CSA CCM v4.0.12",
    "DORA",
    "GDPR",
    "HITRUST CSF v.11.2.0",
    "ITSG-33",
    "Insurance Regulatory And Development Authority Of India",
    "Microsoft Cloud Security Benchmark v1",
    "NIST 800-53 Rev 5",
    "SOC 2",
    "Secure Controls Framework (SCF) - 2024.2",
    "TX-RAMP Level 1",
    "TX-RAMP Level 2"
  ]
}