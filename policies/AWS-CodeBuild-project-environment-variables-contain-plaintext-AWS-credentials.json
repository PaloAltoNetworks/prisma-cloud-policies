{
  "policyUpi": "PC-AWS-BLD-1225",
  "policyId": "225c49ce-9e34-4dc6-a60a-c79b30a4ee15",
  "policyType": "config",
  "cloudType": "aws",
  "severity": "low",
  "name": "AWS CodeBuild project environment variables contain plaintext AWS credentials",
  "description": "This policy identifies the AWS CodeBuild project that contains the environment variables AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY  and Password in plaintext.\n\nAWS CodeBuild environment variables configure build settings, pass contextual information, and manage sensitive data during the build process. Authentication credentials like AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY should never be stored in clear text, as this could lead to unintended data exposure and unauthorized access.\n\nIt is recommended that AWS CodeBuild environment variables be securely managed using AWS Secrets Manager or AWS Systems Manager Parameter Store to store sensitive data and remove plaintext credentials.",
  "rule.criteria": "d66b8bbe-9139-4723-ab2a-a994d193b6eb",
  "searchModel.query": "config from cloud.resource where api.name = 'aws-code-build-project' AND json.rule = environment.environmentVariables[*].name exists and environment.environmentVariables[?any( (name contains \"AWS_ACCESS_KEY_ID\" or name contains \"AWS_SECRET_ACCESS_KEY\" or name contains \"PASSWORD\" ) and type equals \"PLAINTEXT\")] exists",
  "recommendation": "To remove environment variables from a AWS CodeBuild project,\n\n1. Log in to the AWS Management Console.\n2. In the console, select the specific region from the region drop-down in the top right corner, for which the alert is generated.\n3. Navigate to 'Developer Tools' from the 'Services' dropdown and select the 'CodeBuild'.\n4. In the navigation pane, choose 'Build projects'.\n5. Select the reported Build project and choose Edit, then click 'Environment' and Expand 'Additional configuration'.\n6. Choose 'Remove' next to the environment variables that contain plaintext credentials.\n7. When you have finished changing your CodeBuild environment configuration, click ‘Update environment’.\n\nYou can store environment variables with sensitive values in the AWS Systems Manager Parameter Store or AWS Secrets Manager and then retrieve them from your build spec according to your business requirements.",
  "remediable": false,
  "remediation.cliScriptTemplate": "",
  "remediation.description": "",
  "remediation.impact": "",
  "compliance.standard": [
    "CSA CCM v4.0.12",
    "HITRUST CSF v.11.2.0",
    "ITSG-33",
    "MITRE ATT&CK v15.1 Cloud IaaS for Enterprise",
    "Microsoft Cloud Security Benchmark v1",
    "NYDFS 23 CRR-NY 500.0",
    "Secure Controls Framework (SCF) - 2024.2",
    "TX-RAMP Level 1",
    "TX-RAMP Level 2"
  ]
}